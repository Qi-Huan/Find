apply plugin: 'com.android.application'

android {
    signingConfigs {
        config {
            keyAlias 'find'
            keyPassword '123456'
            storeFile file('../find.jks')
            storePassword '123456'
        }
    }
    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "com.qihuan.find"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk { abiFilters "armeabi", "armeabi-v7a", "x86", "mips" }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        moduleName           : project.getName(),
                        // fix Schema export directory is not provided to the annotation processor so we cannot export the schema. You can either provide `room.schemaLocation` annotation processor argument OR set exportSchema to false
                        "room.schemaLocation": "$projectDir/schemas".toString()
                ]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    // image loader
    implementation project(':imageloader')
    // android support
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:support-v4:26.1.0'
    implementation 'com.android.support:design:26.1.0'
    // glide
    implementation 'com.github.bumptech.glide:glide:4.0.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.0.0'
    // gson
    implementation 'com.google.code.gson:gson:2.8.1'
    // retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.0'
    implementation 'com.github.franmontiel:PersistentCookieJar:v1.0.0'
    // rx
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.0'
    // rxbinding
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.0.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding-support-v4:2.0.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding-appcompat-v7:2.0.0'
    implementation('com.jakewharton.rxbinding2:rxbinding-design:2.0.0') {
        exclude group: 'com.android.support'
    }
    // rxpermissions
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.4@aar'
    // AdapterHelper
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.31'
    // Toasty
    implementation 'com.github.GrenderG:Toasty:1.2.5'
    // banner
    implementation 'cn.bingoogolapple:bga-banner:2.1.7@aar'
    // Arouter
    implementation 'com.alibaba:arouter-api:1.2.1.1'
    annotationProcessor 'com.alibaba:arouter-compiler:1.1.2.1'
    // room
    implementation 'android.arch.persistence.room:runtime:1.0.0-beta1'
    implementation 'android.arch.persistence.room:rxjava2:1.0.0-beta1'
    annotationProcessor "android.arch.persistence.room:compiler:1.0.0-beta1"
    // Google Architecture Components
    implementation 'android.arch.lifecycle:runtime:1.0.0'
    implementation 'android.arch.lifecycle:extensions:1.0.0-beta1'
    implementation 'android.arch.lifecycle:reactivestreams:1.0.0-beta1'
    implementation "android.arch.lifecycle:common-java8:1.0.0-beta1"
    // dagger
    implementation 'com.google.dagger:dagger:2.11'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.11'
    compile 'com.google.dagger:dagger-android:2.11'
    compile 'com.google.dagger:dagger-android-support:2.11'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.11'
    // logger
    compile 'com.orhanobut:logger:2.1.1'
}

// copy apk files to build/bakApk/buildType
build {
    doLast {
        def buildTime = new Date().format("MMdd-HH-mm-ss", TimeZone.getDefault())
        def appName = 'find'
        android.applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def intoFile = "${buildDir}/bakApk/${appName}-${variant.versionName}-${buildTime}/${variant.buildType.name}/"
                if (output.outputFile != null && output.outputFile.name.endsWith('.apk')) {
                    def apkName = "${appName}-${variant.buildType.name}.apk"
                    copy {
                        from output.outputFile
                        into intoFile
                        rename {
                            apkName
                        }
                    }
                }
            }
        }
    }
}